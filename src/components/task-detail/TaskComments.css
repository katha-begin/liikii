/* Task Comments Styles */

.task-comments {
  display: flex;
  flex-direction: column;
  height: 100%;
  min-height: 300px;
}

/* Loading state */
.task-comments-loading {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  padding: 40px 20px;
  color: var(--color-text-secondary);
  font-size: 14px;
}

.task-comments-spinner {
  width: 16px;
  height: 16px;
  border: 2px solid var(--color-border);
  border-top: 2px solid var(--color-primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

/* Comments list */
.task-comments-list {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 16px;
  margin-bottom: 20px;
  max-height: 400px;
  overflow-y: auto;
  padding-right: 4px;
}

/* Empty state */
.task-comments-empty {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 40px 20px;
  text-align: center;
  color: var(--color-text-secondary);
}

.task-comments-empty svg {
  margin-bottom: 12px;
  opacity: 0.5;
}

.task-comments-empty p {
  font-size: 14px;
  font-weight: 500;
  margin: 0 0 4px 0;
}

.task-comments-empty span {
  font-size: 13px;
  opacity: 0.7;
}

/* Individual comment */
.task-comment {
  display: flex;
  gap: 12px;
  padding: 0;
}

.task-comment-avatar {
  flex-shrink: 0;
  width: 32px;
  height: 32px;
  border-radius: 50%;
  overflow: hidden;
}

.task-comment-avatar img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.task-comment-avatar-placeholder {
  width: 100%;
  height: 100%;
  background: var(--accent-blue);
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: var(--text-h2);
  line-height: var(--text-h2-lh);
  font-weight: 600;
}

.task-comment-content {
  flex: 1;
  min-width: 0;
}

.task-comment-header {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-bottom: 4px;
}

.task-comment-author {
  font-size: var(--text-body);
  line-height: var(--text-body-lh);
  font-weight: 600;
  color: var(--text-primary);
}

.task-comment-timestamp {
  font-size: var(--text-caption);
  line-height: var(--text-caption-lh);
  color: var(--icon-quieter);
}

.task-comment-text {
  font-size: var(--text-h2);
  line-height: var(--text-h2-lh);
  color: var(--text-secondary);
  word-wrap: break-word;
}

/* Add comment form */
.task-comments-form {
  border-top: 1px solid var(--border-line);
  padding-top: var(--space-4);
  margin-top: auto;
}

.task-comments-input-container {
  position: relative;
  display: flex;
  gap: var(--space-2);
}

.task-comments-input {
  flex: 1;
  padding: var(--space-3) var(--space-4);
  border: 1px solid var(--border-line);
  border-radius: var(--radius-input);
  background: var(--bg-surface-1);
  color: var(--text-primary);
  font-size: var(--text-h2);
  line-height: var(--text-h2-lh);
  font-family: inherit;
  resize: vertical;
  min-height: 44px;
  max-height: 120px;
  transition: border-color 0.2s ease;
}

.task-comments-input:focus {
  outline: none;
  border-color: var(--accent-blue);
}

.task-comments-input::placeholder {
  color: var(--icon-quieter);
}

.task-comments-submit {
  align-self: flex-end;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 44px;
  height: 44px;
  background: var(--color-primary);
  color: white;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.2s ease;
}

.task-comments-submit:hover:not(:disabled) {
  background: var(--color-primary-hover);
}

.task-comments-submit:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.task-comments-submit-spinner {
  width: 16px;
  height: 16px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-top: 2px solid white;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

/* Scrollbar styling for comments list */
.task-comments-list::-webkit-scrollbar {
  width: 4px;
}

.task-comments-list::-webkit-scrollbar-track {
  background: transparent;
}

.task-comments-list::-webkit-scrollbar-thumb {
  background: var(--color-border);
  border-radius: 2px;
}

.task-comments-list::-webkit-scrollbar-thumb:hover {
  background: var(--color-text-tertiary);
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
